name: 'Kyma CLI'
description: 'A Github Action wrapping the official Kyma CLI'
inputs:
  command:
    description: 'command to pass to the CLI, defaults to printing the version'
    required: false
    default: 'version --client'
  version:
    description: 'the stability or version of the CLI, either stable or unstable or a release tag like 2.7.1'
    required: true
    default: 'stable'
outputs:
  path:
    description: "Path to the Kyma CLI"
    value: ${{ steps.set-kyma-paths.outputs.path }}
runs:
  using: "composite"
  steps:
  
    - uses: actions/cache@v3
      name: Lookup Cached Kyma if available
      with:
        path: |
          /usr/local/bin/kyma-${{ inputs.version }}
        key: ${{ runner.os }}-kyma-${{ inputs.version }}
        restore-keys: |
          ${{ runner.os }}-kyma-${{ inputs.version }}
          
    - name: Download the CLI for ${{ runner.os }} ( ${{ inputs.version }} )
      id: download-storage-with-stability
      shell: bash
      if: ( inputs.version == 'stable' ) || ( inputs.version == 'unstable' )
      run: |
        EXEC=kyma-${{ inputs.version }}
        if [ ! -f "$EXEC" ]; then
          echo "$EXEC was never downloaded, looking up."
          wget -q https://storage.googleapis.com/kyma-cli-${{ inputs.version }}/kyma-linux
          chmod +x kyma-linux && mv kyma-linux $EXEC
        fi
    - name: Download the CLI for ${{ runner.os }} ( ${{ inputs.version }} )
      id: download-storage-with-version
      shell: bash
      if: ( inputs.version != 'stable' ) && ( inputs.version != 'unstable' )
      run: |
        EXEC=kyma-${{ inputs.version }}
        if [ ! -f "$EXEC" ]; then
          echo "$EXEC was never downloaded, looking up."
          wget -q https://github.com/kyma-project/cli/releases/download/${{ inputs.version }}/kyma_Linux_x86_64.tar.gz
          tar -xvf kyma_Linux_x86_64.tar.gz kyma
          chmod +x kyma && mv kyma $EXEC
        fi
    
    - shell: bash
      name: Add CLI to Path
      run: |
        EXEC=/usr/local/bin/kyma-${{ inputs.version }}
        if [ ! -f "$EXEC" ]; then
            echo "$EXEC does not exist in path yet, adding."
            mv kyma-${{ inputs.version }} $EXEC
        fi
        
    - shell: bash
      name: Set Output Variables
      id: set-kyma-paths
      run: |
        PATH=/usr/local/bin/kyma-${{ inputs.version }}
        echo "Writing $PATH into output variables!"
        echo "::set-output name=path::/usr/local/bin/kyma-${{ inputs.version }}"
        
    - if: ${{ inputs.command != '' }}
      shell: bash
      name: Run ${{ inputs.command }}
      run: |
        ${{ steps.set-kyma-paths.outputs.path }} --ci ${{ inputs.command }}
